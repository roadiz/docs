msgid ""
msgstr ""
"Project-Id-Version: roadiz-cms-documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-09-23 22:16+0200\n"
"PO-Revision-Date: 2020-09-23 20:24\n"
"Last-Translator: \n"
"Language-Team: French\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Crowdin-Project: roadiz-cms-documentation\n"
"X-Crowdin-Project-ID: 421742\n"
"X-Crowdin-Language: fr\n"
"X-Crowdin-File: /develop/i18n/locale/developer/nodes-system/nodes.pot\n"
"X-Crowdin-File-ID: 114\n"
"Language: fr_FR\n"

#: ../../src/developer/nodes-system/nodes.rst:5
msgid "Handling nodes and their hierarchy"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:7
msgid "By default, if you use Entities API methods or trasversing Twig filters, Roadiz will automatically handle security parameters such as ``node.status`` and ``preview`` mode."
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:22
msgid "This first code snippet is using *Node-source API*. This will automatically check if current user is logged-in and if preview mode is *ON* to display or not *unpublished nodes*."
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:34
msgid "This second code snippet uses standard Doctrine *Entity Manager* to directly grab node-sources by their entity class. This method does not check any security and will return every node-sources, **even unpublished, archived and deleted ones**."
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:39
msgid "Hierarchy"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:41
msgid "To trasverse node-sources hierarchy, the easier method is to use *Twig* filters on your ``nodeSource`` entity. Filters will implicitly set ``translation`` from origin node-source."
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:58
msgid "All these filters will take care of publication status and translation, **but not publication date-time neither visibility**."
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:73
msgid "If you need to traverse node-source graph from your controllers you can use the *Entity API*. Moreover, Nodes-sources API allows you to filter using custom criteria if you choose a specific ``NodeType``."
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:89
msgid "Browsing your node graph (calling children or parents) could be very greedy and unoptimized if you have lots of node-types. Internally *Doctrine* will *inner-join* every nodes-sources tables to perform polymorphic hydratation. So, make sure you filter your queries by one ``NodeType`` as much as possible with ``nodeSourceApi`` and ``node.nodeType`` criteria."
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:105
#: ../../src/developer/nodes-system/nodes.rst:110
msgid "Visibility"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:107
msgid "There are two parametres that you must take care of in your themes and your controllers, because they are not mandatory in all website cases:"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:111
msgid "Publication date and time"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:113
msgid "For example, *publication date and time* won’t be necessary in plain text pages and not timestampable contents. But we decided to add it directly in ``NodesSources`` entity to be able to filter and order with this field in Roadiz back-office. This was not possible if you manually create your own ``publishedAt`` as a node-type field."
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:120
msgid "Pay attention that *publication date and time* (``publishedAt``) and visibility (``node.visible``) **does not prevent** your node-source from being viewed if you did not explicitly forbid access to its controller. This field is not deeply set into Roadiz security mechanics."
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:125
msgid "If you need so, make sure that your node-type controller checks these two fields and throws a ``ResourceNotFoundException`` if they’re not satisfied."
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:153
msgid "Publication workflow"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:155
msgid "Each Node state is handled by a *Workflow* to switch between the following 5 states:"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:158
msgid "States"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:159
msgid "``Node::DRAFT``"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:160
msgid "``Node::PENDING``"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:161
msgid "``Node::PUBLISHED``"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:162
msgid "``Node::ARCHIVED``"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:163
msgid "``Node::DELETED``"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:166
msgid "Transitions"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:167
msgid "review"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:168
msgid "reject"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:169
msgid "publish"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:170
msgid "archive"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:171
msgid "unarchive"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:172
msgid "delete"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:173
msgid "undelete"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:175
msgid "You cannot changes a Node status directly using its *setter*, you must use Roadiz main *registry* to perform transition. This can prevent unwanted behaviours and you can track changes with events and guards:"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:188
msgid "Generating paths and url"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:190
msgid "You can use ``generateUrl()`` in your controllers to get a node-source’ path or url. In your Twig template, you can use ``path`` method as described in Twig section: :ref:`twig-generate-paths`."
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:223
msgid "Overriding default node-source path generation"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:225
msgid "You can override default node-source path generation in order to use ``{{ path() }}`` method in your *Twig* templates but with a custom logic. For example, you have a ``Link`` node-type which purpose only is to link to an other node in your website. When you call *path* or *URL* generation on it, you should prefer getting its linked node path, so you can listen to ``RZ\\Roadiz\\Core\\Events\\NodesSources\\NodesSourcesPathGeneratingEvent:class`` event and stop propagation to return your linked node path instead of your *link* node path."
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:296
msgid "Then register your subscriber to the Roadiz event dispatcher in your theme ``setupDependencyInjection``:"
msgstr ""

#: ../../src/developer/nodes-system/nodes.rst:304
msgid "This method has an other great benefit: it allows your path logic to be cached inside node-source url’ cache provider, instead of generating your custom URL inside your Twig templates or PHP controllers."
msgstr ""

